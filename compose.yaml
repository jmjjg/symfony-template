services:
    nginx:
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
            args:
                - NGINX_UID=${NGINX_UID:-1000}
                - NGINX_GID=${NGINX_GID:-1000}
        container_name: nginx
        depends_on:
            - php-fpm
            - postgresql
        networks:
            - symfony
        ports:
            - "${FORWARD_NGINX_PORT:-80}:80"
        restart: unless-stopped

    php-cli:
        build:
            args:
                - PHP_UID=${PHP_UID:-1000}
                - PHP_GID=${PHP_GID:-1000}
            context: .
            dockerfile: docker/php/Dockerfile
            target: php-cli
        container_name: php-cli
        environment:
          DB_URL: ${DB_URL}
        networks:
            - symfony
        restart: no
        scale: 0

    # @todo: additional_contexts (https://docs.docker.com/reference/compose-file/build/)
    php-fpm:
        build:
            args:
                - PHP_UID=${PHP_UID:-1000}
                - PHP_GID=${PHP_GID:-1000}
            context: .
            dockerfile: docker/php/Dockerfile
            target: php-fpm
        container_name: php-fpm
        environment:
          DB_URL: ${DB_URL}
        networks:
            - symfony
        ports:
            - "${FORWARD_PHP_PORT:-9000}:9000"
        restart: unless-stopped

    postgresql:
        build:
            context: .
            dockerfile: docker/postgresql/Dockerfile
        container_name: postgresql
        environment:
          POSTGRES_DB: ${DB_DATABASE}
          POSTGRES_USER: ${DB_USERNAME}
          POSTGRES_PASSWORD: ${DB_PASSWORD}
          PGDATA: /data/postgres
          TZ: Europe/Paris # @todo: env + default + others
        healthcheck:
          test: [ "CMD-SHELL", "pg_isready -d ${DB_DATABASE} -U ${DB_USERNAME}" ]
          interval: 5s
          timeout: 5s
          retries: 5
        networks:
          - symfony
        ports:
          - "${FORWARD_DB_PORT:-5432}:5432"
        restart: unless-stopped
        volumes:
          - postgresql:/data/postgres

volumes:
  postgresql:
    driver: local

networks:
    symfony:
        driver: bridge
